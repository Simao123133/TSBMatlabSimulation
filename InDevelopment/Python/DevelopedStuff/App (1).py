# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'cool.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from pyqtgraph import PlotWidget
import pyqtgraph as pg
from ReadData import get_data
import numpy as np
import time
import datetime

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):

        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowTitle("View Data")
        MainWindow.resize(1764, 916)

        options = QtWidgets.QFileDialog.Options()
        options |= QtWidgets.QFileDialog.DontUseNativeDialog
        fileName, _ = QtWidgets.QFileDialog.getOpenFileName(MainWindow,"QFileDialog.getOpenFileName()", "","All Files (*);;Python Files (*.py)", options=options)

        global aux, names0, names1, names2, names3, pen, dataset
        
        dataset = get_data(fileName)
        
        aux = np.zeros([len(dataset.signal),4])
        pen = np.ones(len(dataset.signal))

        names_or = []
        for i in range(len(dataset.signal)):
            names_or.append(dataset.signal[i].name)

        names0 = names_or.copy()
        names1 = names_or.copy()
        names2 = names_or.copy()
        names3 = names_or.copy()
        
        self.date_axis = pg.graphicsItems.DateAxisItem.DateAxisItem(orientation = 'bottom')
        self.date_axis_2 = pg.graphicsItems.DateAxisItem.DateAxisItem(orientation = 'bottom')
        self.date_axis_3 = pg.graphicsItems.DateAxisItem.DateAxisItem(orientation = 'bottom')
        self.date_axis_4 = pg.graphicsItems.DateAxisItem.DateAxisItem(orientation = 'bottom')

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.graphicsView = PlotWidget(self.centralwidget, axisItems = {'bottom': self.date_axis})
        self.graphicsView.setGeometry(QtCore.QRect(10, 50, 841, 361))
        self.graphicsView.setObjectName("graphicsView")
        self.graphicsView_2 = PlotWidget(self.centralwidget, axisItems = {'bottom': self.date_axis_2})
        self.graphicsView_2.setGeometry(QtCore.QRect(860, 50, 881, 361))
        self.graphicsView_2.setObjectName("graphicsView_2")
        self.graphicsView_3 = PlotWidget(self.centralwidget, axisItems = {'bottom': self.date_axis_3})
        self.graphicsView_3.setGeometry(QtCore.QRect(10, 450, 841, 391))
        self.graphicsView_3.setObjectName("graphicsView_3")
        self.graphicsView_4 = PlotWidget(self.centralwidget, axisItems = {'bottom': self.date_axis_4})
        self.graphicsView_4.setGeometry(QtCore.QRect(860, 450, 881, 391))
        self.graphicsView_4.setObjectName("graphicsView_4")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(470, 10, 371, 25))
        self.comboBox.setObjectName("comboBox")
        self.comboBox_2 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_2.setGeometry(QtCore.QRect(860, 10, 421, 25))
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_3 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_3.setGeometry(QtCore.QRect(870, 420, 411, 25))
        self.comboBox_3.setObjectName("comboBox_3")
        self.comboBox_4 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_4.setGeometry(QtCore.QRect(460, 420, 381, 25))
        self.comboBox_4.setObjectName("comboBox_4")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1052, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(100, 10, 371, 25))
        self.label.setObjectName("label")
        self.label.setFont(QtGui.QFont("Arial", 16))
        

        self.comboBox.addItems(names_or)
        self.comboBox_2.addItems(names_or)
        self.comboBox_3.addItems(names_or)
        self.comboBox_4.addItems(names_or)
        
        self.comboBox.activated.connect(self.draw)
        self.comboBox_2.activated.connect(self.draw_2)
        self.comboBox_3.activated.connect(self.draw_3)
        self.comboBox_4.activated.connect(self.draw_4)

        #self.graphicsView.showGrid(x = True, y = True, alpha = 0.8)
        #self.graphicsView_2.showGrid(x = True, y = True, alpha = 0.8)     
        #self.graphicsView_3.showGrid(x = True, y = True, alpha = 0.8)     
        #self.graphicsView_4.showGrid(x = True, y = True, alpha = 0.8) 

        self.vLine = pg.InfiniteLine(angle=90, movable=False)
        self.hLine = pg.InfiniteLine(angle=0, movable=False)
        self.vLine1 = pg.InfiniteLine(angle=90, movable=False)
        self.hLine1 = pg.InfiniteLine(angle=0, movable=False)
        self.vLine2 = pg.InfiniteLine(angle=90, movable=False)
        self.hLine2 = pg.InfiniteLine(angle=0, movable=False)
        self.vLine3 = pg.InfiniteLine(angle=90, movable=False)
        self.hLine3 = pg.InfiniteLine(angle=0, movable=False)

        self.graphicsView.addItem(self.vLine, ignoreBounds=True)
        self.graphicsView.addItem(self.hLine, ignoreBounds=True)
        self.graphicsView_2.addItem(self.vLine1, ignoreBounds=True)
        self.graphicsView_2.addItem(self.hLine1, ignoreBounds=True)
        self.graphicsView_3.addItem(self.vLine2, ignoreBounds=True)
        self.graphicsView_3.addItem(self.hLine2, ignoreBounds=True)
        self.graphicsView_4.addItem(self.vLine3, ignoreBounds=True)
        self.graphicsView_4.addItem(self.hLine3, ignoreBounds=True)
        
        mypen = pg.mkPen('y', width=1)
        mypen1 = pg.mkPen('y', width=1)
        mypen2 = pg.mkPen('y', width=1)
        mypen3 = pg.mkPen('y', width=1)
        self.curve = self.graphicsView.plot(x=[], y=[], pen=mypen)
        self.curve.scene().sigMouseMoved.connect(self.mouseMoved)
        self.curve1 = self.graphicsView_2.plot(x=[], y=[], pen=mypen1)
        self.curve1.scene().sigMouseMoved.connect(self.mouseMoved1)
        self.curve2 = self.graphicsView_3.plot(x=[], y=[], pen=mypen2)
        self.curve2.scene().sigMouseMoved.connect(self.mouseMoved2)
        self.curve3 = self.graphicsView_4.plot(x=[], y=[], pen=mypen3)
        self.curve3.scene().sigMouseMoved.connect(self.mouseMoved3)

        self.graphicsView_2.setXLink(self.graphicsView)
        self.graphicsView_3.setXLink(self.graphicsView)
        self.graphicsView_4.setXLink(self.graphicsView)
    
        self.plot = []
        self.plot_index = []
        self.plot_2 = []
        self.plot_index_2 = []
        self.plot_3 = []
        self.plot_index_3 = []
        self.plot_4 = []
        self.plot_index_4 = []

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))

    def draw(self):

        global aux, names0, pen
        
        index = names0.index(self.comboBox.currentText())
        if(aux[index,0] == 0):
            
            self.plot.append(self.graphicsView.plot(dataset.signal[index].time, dataset.signal[index].value, pen=(1, pen[0]))) 
            self.plot_index.append(index)
            self.comboBox.setItemText(index, names0[index]+" plotted --------------------")
            names0[index] = names0[index]+" plotted --------------------"
            aux[index,0] = 1    
            pen[0] = pen[0] + 1
        else:
            self.plot[self.plot_index.index(index)].clear()
            self.plot.pop(self.plot_index.index(index))
            self.plot_index.remove(index)
            aux[index,0] = 0
            pen[0] = pen[0] - 1
            names0[index] = names_or[index]
            self.comboBox.setItemText(index, names0[index])

    def draw_2(self):

        global aux, names1, pen
        
        index = names1.index(self.comboBox_2.currentText())
        if(aux[index,1] == 0):
            self.plot_2.append(self.graphicsView_2.plot(dataset.signal[index].time, dataset.signal[index].value, pen=(1, pen[1]))) 
            self.plot_index_2.append(index)
            self.comboBox_2.setItemText(index, names1[index]+" plotted --------------------")
            names1[index] = names0[index]+" plotted --------------------"
            aux[index,1] = 1
            pen[1] = pen[1] + 1
        else:
            self.plot_2[self.plot_index_2.index(index)].clear()
            self.plot_2.pop(self.plot_index_2.index(index))
            self.plot_index_2.remove(index)
            aux[index,1] = 0
            pen[1] = pen[1] - 1
            names1[index] = names_or[index]
            self.comboBox_2.setItemText(index, names1[index])

    def draw_3(self):

        global aux, names2, pen
        
        index = names2.index(self.comboBox_3.currentText())
        if(aux[index,2] == 0):
            self.plot_3.append(self.graphicsView_4.plot(dataset.signal[index].time, dataset.signal[index].value, pen=(1, pen[2]))) 
            self.plot_index_3.append(index)
            self.comboBox_3.setItemText(index, names2[index]+" plotted --------------------")
            names2[index] = names0[index]+" plotted --------------------"
            aux[index,2] = 1
            pen[2] = pen[2] + 1
        else:
            self.plot_3[self.plot_index_3.index(index)].clear()
            self.plot_3.pop(self.plot_index_3.index(index))
            self.plot_index_3.remove(index)
            aux[index,2] = 0
            pen[2] = pen[2] -1
            names2[index] = names_or[index]
            self.comboBox_3.setItemText(index, names2[index])

    def draw_4(self):

        global aux, names3, pen
        
        index = names3.index(self.comboBox_4.currentText())
        if(aux[index,3] == 0):
            self.plot_4.append(self.graphicsView_3.plot(dataset.signal[index].time, dataset.signal[index].value, pen=(1, pen[3]))) 
            self.plot_index_4.append(index)
            self.comboBox_4.setItemText(index, names3[index]+" plotted --------------------")
            names3[index] = names0[index]+" plotted --------------------"
            aux[index,3] = 1
            pen[3] = pen[3] +1
        else:
            self.plot_4[self.plot_index_4.index(index)].clear()
            self.plot_4.pop(self.plot_index_4.index(index))
            self.plot_index_4.remove(index)
            pen[3] = pen[3] -1
            names3[index] = names_or[index]
            self.comboBox_4.setItemText(index, names3[index])

    def mouseMoved(self,point):
        p = self.graphicsView.plotItem.vb.mapSceneToView(point)

        x = float("{0:.3f}".format(p.x()))
        y = float("{0:.3f}".format(p.y()))
        x_time = str(datetime.timedelta(seconds=x))[0:10]
        self.statusbar.showMessage("{}".format(x))
        self.label.setText(f"Cursor Position: {x_time, y}")
        self.vLine.setPos(p.x())
        self.hLine.setPos(p.y())

    def mouseMoved1(self,point):
        p = self.graphicsView_2.plotItem.vb.mapSceneToView(point)

        x = float("{0:.3f}".format(p.x()))
        y = float("{0:.3f}".format(p.y()))
        x_time = str(datetime.timedelta(seconds=x))[0:10]
        self.statusbar.showMessage("{}".format(x))
        self.label.setText(f"Cursor Position: {x_time, y}")
        self.vLine1.setPos(p.x())
        self.hLine1.setPos(p.y())

    def mouseMoved2(self,point):
        p = self.graphicsView_3.plotItem.vb.mapSceneToView(point)

        x = float("{0:.3f}".format(p.x()))
        y = float("{0:.3f}".format(p.y()))
        x_time = str(datetime.timedelta(seconds=x))[0:10]
        self.statusbar.showMessage("{}".format(x))
        self.label.setText(f"Cursor Position: {x_time, y}")
        self.vLine2.setPos(p.x())
        self.hLine2.setPos(p.y())

    def mouseMoved3(self,point):
        p = self.graphicsView_4.plotItem.vb.mapSceneToView(point)

        x = float("{0:.3f}".format(p.x()))
        y = float("{0:.3f}".format(p.y()))
        x_time = str(datetime.timedelta(seconds=x))[0:10]
        self.statusbar.showMessage("{}".format(x))
        self.label.setText(f"Cursor Position: {x_time, y}")
        self.vLine3.setPos(p.x())
        self.hLine3.setPos(p.y())

if __name__ == "__main__":


    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.showMaximized()
    sys.exit(app.exec_())
